interpolate-creds: &interpolate-creds
  do:
  - in_parallel:
    - get: texplate-binary
      params:
        globs:
        - texplate_linux_amd64
    - get: jq-binary
      params:
        globs:
        - jq-linux64
  - task: tfstate-interpolate
    image: platform-automation-image
    file: tasks-repo/tasks/tfstate-interpolate/task.yml
    input_mapping:
      tf_state: terraform-infra
      tasks: tasks-repo
      texplate: texplate-binary
      jq: jq-binary
      files: configuration-repo
    output_mapping:
      interpolated-files: interpolated-tf-files
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      PREFIX: '/((resource_group))'
      SKIP_MISSING: true
    input_mapping:
      files: interpolated-tf-files
    output_mapping:
      interpolated-files: interpolated-creds
  - task: merge-files
    image: platform-automation-image
    file: tasks-repo/tasks/merge-files/task.yml
    input_mapping:
      files: configuration-repo

put-state: &put-state
  do:
  - put: opsman-state
    params:
      file: generated-state/state-pas-*.yml

groups:
- name: deploy
  jobs:
  - terraform-infra
  - install-opsman
  - export-installation
  - upgrade-opsman
  - upload-and-stage-pas
  - configure-pas
  - apply-product-changes
- name: destroy
  jobs:
  - 1-delete-installation
  - 2-delete-opsman
  - 3-terraform-destroy

resource_types:
- name: azure-blobstore
  type: docker-image
  source:
    repository: pcfabr/azure-blobstore-resource

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.11.14

resources:
# Git repos
- name: configuration-repo
  type: git
  source:
    private_key: ((github_private_key))
    uri: git@github.com:EngineerBetter/pas-azure-config.git
    branch: ((configuration-branch))

- name: tasks-repo
  type: git
  source:
    private_key: ((github_private_key))
    uri: git@github.com:EngineerBetter/pas-azure.git
    branch: master
    paths:
    - tasks

# Terraform source
- name: terraforming-azure-tarball
  type: github-release
  source:
    owner: pivotal-cf
    repository: terraforming-azure
    access_token: ((github_access_token))

# Binaries
- name: texplate-binary
  type: github-release
  source:
    owner: pivotal-cf
    repository: texplate
    access_token: ((github_access_token))

- name: jq-binary
  type: github-release
  source:
    owner: stedolan
    repository: jq
    access_token: ((github_access_token))

# Terraform
- name: terraform-infra
  type: terraform
  source:
    env_name: pas
    backend_type: azurerm
    backend_config:
      storage_account_name: ((storage_account_name))
      container_name: resources
      key: terraform.tfstate
      access_key: ((storage_account_key))

# State
- name: installation
  type: azure-blobstore
  source:
    storage_account_name: ((storage_account_name))
    storage_account_key: ((storage_account_key))
    container: resources
    regexp: pas-installation-(.*).zip

- name: opsman-state
  type: azure-blobstore
  source:
    storage_account_name: ((storage_account_name))
    storage_account_key: ((storage_account_key))
    container: resources
    regexp: state-pas-(.*).yml

# Azure blobstore blobs
- name: platform-automation-tasks
  type: azure-blobstore
  source:
    <<: &azure-params
      storage_account_name: ((storage_account_name))
      storage_account_key: ((storage_account_key))
      container: pivnet
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: azure-blobstore
  source:
    <<: *azure-params
    regexp: platform-automation-image-(.*).tgz

- name: opsman-product
  type: azure-blobstore
  source:
    <<: *azure-params
    regexp: ops-manager-azure-(.*).yml

- name: pas-product
  type: azure-blobstore
  source:
    <<: *azure-params
    regexp: cf-(.*).pivotal

- name: pas-stemcell
  type: azure-blobstore
  source:
    <<: *azure-params
    regexp: pas-stemcells/bosh-stemcell-(.*)-azure-hyperv-ubuntu-xenial-go_agent.tgz

# Triggers
- name: one-time-trigger
  type: time
  source:
    interval: 999999h

- name: daily-trigger
  type: time
  source:
    interval: 24h

jobs:
- name: terraform-infra
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
    - get: terraforming-azure-tarball
    - get: platform-automation-image
      params:
        unpack: true
    - get: configuration-repo
      trigger: true
    - get: tasks-repo
      trigger: true
  - task: extract-tf-files
    image: platform-automation-image
    file: tasks-repo/tasks/extract-tf-files/task.yml
  - put: terraform-infra
    params:
      terraform_source: terraforming-azure/terraforming/terraforming-pas
      vars:
        <<: &tf-vars
          client_id: ((client_id))
          client_secret: ((client_secret))
          dns_suffix: ((dns_suffix))
          domains:
          - "*.((resource_group)).((dns_suffix))"
          - "*.apps.((resource_group)).((dns_suffix))"
          - "*.sys.((resource_group)).((dns_suffix))"
          - "*.login.sys.((resource_group)).((dns_suffix))"
          - "*.uaa.sys.((resource_group)).((dns_suffix))"
          env_name: ((resource_group))
          location: ((location))
          ops_manager_image_uri: ""
          parent_dns_rg: ((parent_dns_rg))
          subscription_id: ((subscription_id))
          tenant_id: ((tenant_id))

- name: install-opsman
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
      passed:
      - terraform-infra
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      passed:
      - terraform-infra
      params:
        output_statefile: true
    - get: configuration-repo
      passed:
      - terraform-infra
    - get: tasks-repo
    - get: opsman-state
    - get: opsman-product
  - <<: *interpolate-creds
  - task: create-vm
    image: platform-automation-image
    file: platform-automation-tasks/tasks/create-vm.yml
    input_mapping:
      image: opsman-product
      config: interpolated-files
      state: opsman-state
    params:
      STATE_FILE: state-pas-$timestamp.yml
    ensure: *put-state
  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 10
    input_mapping:
      env: interpolated-files
      config: interpolated-files
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: interpolated-files
      env: interpolated-files
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files

- name: export-installation
  serial: true
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
      passed:
      - install-opsman
    - get: daily-trigger
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      passed:
      - terraform-infra
      params:
        output_statefile: true
    - get: configuration-repo
      trigger: true
      passed:
      - terraform-infra
    - get: tasks-repo
      trigger: true
    - get: opsman-state
      passed:
      - install-opsman
    - get: opsman-product
      trigger: true
  - <<: *interpolate-creds
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-files
    params:
      INSTALLATION_FILE: pas-installation-$timestamp.zip
  - put: installation
    params:
      file: installation/pas-installation*.zip

- name: upgrade-opsman
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
      passed:
      - export-installation
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      passed:
      - export-installation
      params:
        output_statefile: true
    - get: configuration-repo
      trigger: true
      passed:
      - export-installation
    - get: tasks-repo
      trigger: true
      passed:
      - export-installation
    - get: installation
      passed:
      - export-installation
    - get: opsman-state
      passed:
      - export-installation
    - get: opsman-product
      trigger: true
      passed:
      - export-installation
  - <<: *interpolate-creds
  - task: upgrade-opsman
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upgrade-opsman.yml
    input_mapping:
      image: opsman-product
      config: interpolated-files
      env: interpolated-files
      state: opsman-state
    params:
      STATE_FILE: state-pas-$timestamp.yml
      INSTALLATION_FILE: pas-installation*.zip
    ensure: *put-state
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: interpolated-files
      env: interpolated-files
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files

- name: upload-and-stage-pas
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
      passed:
      - upgrade-opsman
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      passed:
      - upgrade-opsman
      params:
        output_statefile: true
    - get: configuration-repo
      trigger: true
      passed:
      - upgrade-opsman
    - get: tasks-repo
      trigger: true
      passed:
      - upgrade-opsman
    - get: pas-product
      trigger: true
    - get: pas-stemcell
      trigger: true
    - get: opsman-product
      trigger: true
      passed:
      - upgrade-opsman
  - <<: *interpolate-creds
  - task: upload-and-stage-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-and-stage-product.yml
    input_mapping:
      product: pas-product
      env: interpolated-files
  - task: upload-pas-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: interpolated-files
      stemcell: pas-stemcell

- name: configure-pas
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
      passed:
      - upload-and-stage-pas
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      passed:
      - upload-and-stage-pas
      params:
        output_statefile: true
    - get: configuration-repo
      trigger: true
      passed:
      - upload-and-stage-pas
    - get: tasks-repo
      trigger: true
      passed:
      - upload-and-stage-pas
    - get: pas-product
      trigger: true
      passed:
      - upload-and-stage-pas
    - get: pas-stemcell
      trigger: true
      passed:
      - upload-and-stage-pas
    - get: opsman-product
      trigger: true
      passed:
      - upload-and-stage-pas
  - <<: *interpolate-creds
  - task: configure-pas
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: interpolated-files
      env: interpolated-files
    params:
      CONFIG_FILE: pas.yml

- name: apply-product-changes
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: one-time-trigger
      trigger: true
      passed:
      - configure-pas
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      passed:
      - configure-pas
      params:
        output_statefile: true
    - get: configuration-repo
      trigger: true
      passed:
      - configure-pas
    - get: tasks-repo
      trigger: true
      passed:
      - configure-pas
    - get: pas-product
      trigger: true
      passed:
      - configure-pas
    - get: pas-stemcell
      trigger: true
      passed:
      - configure-pas
    - get: opsman-product
      trigger: true
      passed:
      - configure-pas
  - <<: *interpolate-creds
  - task: apply-product-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: interpolated-files

- name: 1-delete-installation
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      params:
        output_statefile: true
    - get: configuration-repo
      passed:
      - terraform-infra
    - get: tasks-repo
  - <<: *interpolate-creds
  - task: delete-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/delete-installation.yml
    input_mapping:
      env: interpolated-files

- name: 2-delete-opsman
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: terraform-infra
      passed:
      - terraform-infra
      params:
        output_statefile: true
    - get: configuration-repo
      passed:
      - terraform-infra
    - get: tasks-repo
    - get: opsman-state
  - <<: *interpolate-creds
  - task: delete-vm
    image: platform-automation-image
    file: platform-automation-tasks/tasks/delete-vm.yml
    input_mapping:
      image: opsman-product
      config: interpolated-files
      state: opsman-state
    params:
      STATE_FILE: state-pas-$timestamp.yml
    ensure: *put-state

- name: 3-terraform-destroy
  serial: true
  serial_groups:
  - install
  plan:
  - in_parallel:
    - get: terraforming-azure-tarball
    - get: platform-automation-image
      params:
        unpack: true
    - get: configuration-repo
    - get: tasks-repo
  - task: extract-tf-files
    image: platform-automation-image
    file: tasks-repo/tasks/extract-tf-files/task.yml
  - put: terraform-infra
    params:
      action: destroy
      get_params:
        action: destroy
      terraform_source: terraforming-azure/terraforming/terraforming-pas
      vars:
        <<: *tf-vars
